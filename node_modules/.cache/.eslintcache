[{"/home/aleesha/Documents/WEB_DEV/Projects/movie_app/src/index.js":"1","/home/aleesha/Documents/WEB_DEV/Projects/movie_app/src/App.js":"2","/home/aleesha/Documents/WEB_DEV/Projects/movie_app/src/reportWebVitals.js":"3","/home/aleesha/Documents/WEB_DEV/Projects/movie_app/src/components/NavBar.js":"4","/home/aleesha/Documents/WEB_DEV/Projects/movie_app/src/components/Banner.js":"5","/home/aleesha/Documents/WEB_DEV/Projects/movie_app/src/components/getMovies.js":"6","/home/aleesha/Documents/WEB_DEV/Projects/movie_app/src/components/Movies.js":"7","/home/aleesha/Documents/WEB_DEV/Projects/movie_app/src/components/Nomination.js":"8"},{"size":220,"mtime":1684177730626,"results":"9","hashOfConfig":"10"},{"size":565,"mtime":1684500139119,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1684091563443,"results":"12","hashOfConfig":"10"},{"size":1417,"mtime":1684500100773,"results":"13","hashOfConfig":"10"},{"size":828,"mtime":1684261361854,"results":"14","hashOfConfig":"10"},{"size":14253,"mtime":1684419663625,"results":"15","hashOfConfig":"10"},{"size":5269,"mtime":1684525317177,"results":"16","hashOfConfig":"10"},{"size":8592,"mtime":1684671043905,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1pc3q9q",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/home/aleesha/Documents/WEB_DEV/Projects/movie_app/src/index.js",[],[],[],"/home/aleesha/Documents/WEB_DEV/Projects/movie_app/src/App.js",["47","48"],[],"import React from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport Banner from \"./components/Banner\";\nimport Movies from \"./components/Movies\";\nimport Nomination from \"./components/Nomination\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  BrowserRouter,\n} from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route path=\"/\" exact component={Movies} />\n        <Route path=\"/nomination\" component={Nomination} />\n      </Switch>\n    </Router>\n  );\n}\nexport default App;\n","/home/aleesha/Documents/WEB_DEV/Projects/movie_app/src/reportWebVitals.js",[],[],[],"/home/aleesha/Documents/WEB_DEV/Projects/movie_app/src/components/NavBar.js",[],[],"/home/aleesha/Documents/WEB_DEV/Projects/movie_app/src/components/Banner.js",[],[],"/home/aleesha/Documents/WEB_DEV/Projects/movie_app/src/components/getMovies.js",[],[],"/home/aleesha/Documents/WEB_DEV/Projects/movie_app/src/components/Movies.js",["49","50","51","52","53","54","55","56","57","58"],[],"import React, { Component } from \"react\";\n// import { movies } from \"./getMovies\";\nimport Banner from \"./Banner\";\n\nimport \"./movies.css\";\nimport axios from \"axios\";\n\nexport default class Movies extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: \" \",\n      parr: [1],\n      currPage: 1,\n      movies: [],\n      nominations: [],\n    };\n  }\n\n  async componentDidMount() {\n    const res = await axios.get(\n      `https://api.themoviedb.org/3/movie/popular?api_key=d9c2cdf72b12817eef0811200531ce47&language=en-US&page=${this.state.currPage}`\n    );\n    let data = res.data;\n    this.setState({ movies: [...data.results] });\n\n    console.log(data);\n    console.log(\"ComponentDidMount\");\n  }\n\n  changeMovies = async () => {\n    let CPage = this.state.currPage;\n    const res = await axios.get(\n      `https://api.themoviedb.org/3/movie/popular?api_key=d9c2cdf72b12817eef0811200531ce47&language=en-US&page=${this.state.currPage}`\n    );\n    let data = res.data;\n    this.setState({ movies: [...data.results] });\n  };\n\n  handleRight = () => {\n    let tempArr = [];\n    for (let i = 1; i <= this.state.parr.length + 1; i++) {\n      tempArr.push(i);\n    }\n    this.setState(\n      {\n        parr: [...tempArr],\n        currPage: this.state.currPage + 1,\n      },\n      this.changeMovies\n    );\n  };\n\n  handleLeft = () => {\n    if (this.state.currPage != 1) {\n      this.setState(\n        {\n          currPage: this.state.currPage - 1,\n        },\n        this.changeMovies\n      );\n    }\n  };\n\n  handleclick = (value) => {\n    if (value != this.state.currPage) {\n      this.setState(\n        {\n          currPage: value,\n        },\n        this.changeMovies\n      );\n    }\n  };\n\n  handleNominations = (movies) => {\n    let olddata = JSON.parse(localStorage.getItem(\"movies_app\") || \"[]\");\n    if (this.state.nominations.includes(movies.id)) {\n      olddata = olddata.filter((m) => m.id != movies.id);\n    } else {\n      olddata.push(movies);\n    }\n    localStorage.setItem(\"movies_app\", JSON.stringify(olddata));\n    console.log(olddata);\n    this.handleNominationState();\n  };\n\n  handleNominationState = () => {\n    let olddata = JSON.parse(localStorage.getItem(\"movies_app\") || \"[]\");\n    let temp = olddata.map((movie) => movie.id);\n    this.setState({\n      nominations: [...temp],\n    });\n  };\n\n  render() {\n    // let movie = movies.results;\n    console.log(\"Render\");\n    return (\n      <>\n        <Banner />\n        {this.state.movies.length == 0 ? (\n          <div class=\"spinner-border\" role=\"status\">\n            <span class=\"visually-hidden\">Loading...</span>\n          </div>\n        ) : (\n          <div>\n            <h3 className=\"h1_movies text-center\">\n              <strong>Trending</strong>\n            </h3>\n            <div className=\"movies-list\">\n              {this.state.movies.map((movieObj) => (\n                <div\n                  className=\"card movies-card\"\n                  onMouseEnter={() => this.setState({ hover: movieObj.id })}\n                  onMouseLeave={() => this.setState({ hover: \" \" })}\n                >\n                  <img\n                    src={`\n            https://www.themoviedb.org/t/p/w600_and_h900_bestv2${movieObj.backdrop_path}`}\n                    className=\"card-img-top movies-img\"\n                    alt={movieObj.title}\n                  />\n                  {/* <div className=\"card-body\"> */}\n                  <h3 className=\"card-title movies-title\">\n                    {movieObj.original_title}\n                  </h3>\n                  {/* <p className=\"card-text movies-text\">{movieObj.overview}</p> */}\n                  <div className=\"button-wrapper movies-button\">\n                    {this.state.hover == movieObj.id && (\n                      <a\n                        href=\"#\"\n                        className=\"btn btn-primary\"\n                        onClick={() => this.handleNominations(movieObj)}\n                      >\n                        {this.state.nominations.includes(movieObj.id)\n                          ? \"Remove from Nominations\"\n                          : \"Nominate\"}\n                      </a>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div className=\"movies-pagination\">\n              <nav aria-label=\"Page navigation example\">\n                <ul class=\"pagination\">\n                  <li class=\"page-item\">\n                    <a class=\"page-link page_cursor\" onClick={this.handleLeft}>\n                      Previous\n                    </a>\n                  </li>\n                  {this.state.parr.map((value) => (\n                    <li class=\"page-item\">\n                      <a\n                        class=\"page-link page_cursor\"\n                        onClick={() => this.handleclick(value)}\n                      >\n                        {value}\n                      </a>\n                    </li>\n                  ))}\n                  <li class=\"page-item\">\n                    <a class=\"page-link page_cursor\" onClick={this.handleRight}>\n                      Next\n                    </a>\n                  </li>\n                </ul>\n              </nav>\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n","/home/aleesha/Documents/WEB_DEV/Projects/movie_app/src/components/Nomination.js",["59","60","61","62","63","64"],[],"import React, { Component } from \"react\";\n//import { movies } from \"./getMovies\";\nimport \"./Nomination.css\";\n\nexport default class Nomination extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      genres: [],\n      currgen: \"All Genres\",\n      movies: [],\n      currText: \" \",\n      limit: 5,\n      currPage: 1,\n    };\n  }\n\n  componentDidMount() {\n    let genreids = {\n      28: \"Action\",\n      12: \"Adventure\",\n      16: \"Animation\",\n      35: \"Comedy\",\n      80: \"Crime\",\n      99: \"Documentary\",\n      18: \"Drama\",\n      10751: \"Family\",\n      14: \"Fantasy\",\n      36: \"History\",\n      27: \"Horror\",\n      10402: \"Music\",\n      9648: \"Mystery\",\n      10749: \"Romance\",\n      878: \"Sci-Fi\",\n      10770: \"TV\",\n      53: \"Thriller\",\n      10752: \"War\",\n      37: \"Western\",\n    };\n    let data = JSON.parse(localStorage.getItem(\"movies_app\") || \"[]\");\n    let tempArr = [];\n    data.forEach((movieObj) => {\n      if (!tempArr.includes(genreids[movieObj.genre_ids[0]])) {\n        tempArr.push(genreids[movieObj.genre_ids[0]]);\n      }\n    });\n    tempArr.unshift(\"All Genres\");\n    this.setState({\n      genres: [...tempArr],\n      movies: [...data],\n    });\n  }\n\n  handleGenreChange = (genre) => {\n    this.setState({\n      currgen: genre,\n    });\n  };\n\n  sortPopularityUp = () => {\n    let temp = this.state.movies;\n    temp.sort(function (objA, objB) {\n      return objB.popularity - objA.popularity;\n    });\n    this.setState({\n      movies: [...temp],\n    });\n  };\n\n  sortRatingUp = () => {\n    let temp = this.state.movies;\n    temp.sort(function (objA, objB) {\n      return objB.vote_average - objA.vote_average;\n    });\n    this.setState({\n      movies: [...temp],\n    });\n  };\n\n  sortPopularityDown = () => {\n    let temp = this.state.movies;\n    temp.sort(function (objA, objB) {\n      return objA.popularity - objB.popularity;\n    });\n    this.setState({\n      movies: [...temp],\n    });\n  };\n\n  sortRatingDown = () => {\n    let temp = this.state.movies;\n    temp.sort(function (objA, objB) {\n      return objA.vote_average - objB.vote_average;\n    });\n    this.setState({\n      movies: [...temp],\n    });\n  };\n\n  handlePagesChange = (page) => {\n    this.setState({\n      currPage: page,\n    });\n  };\n\n  handleDelete = (id) => {\n    let newArr = [];\n    newArr = this.state.movies.filter((movieObj) => movieObj.id != id);\n    this.setState({\n      movies: [...newArr],\n    });\n    localStorage.setItem(\"movies app\", JSON.stringify(newArr));\n  };\n\n  render() {\n    let genreids = {\n      28: \"Action\",\n      12: \"Adventure\",\n      16: \"Animation\",\n      35: \"Comedy\",\n      80: \"Crime\",\n      99: \"Documentary\",\n      18: \"Drama\",\n      10751: \"Family\",\n      14: \"Fantasy\",\n      36: \"History\",\n      27: \"Horror\",\n      10402: \"Music\",\n      9648: \"Mystery\",\n      10749: \"Romance\",\n      878: \"Sci-Fi\",\n      10770: \"TV\",\n      53: \"Thriller\",\n      10752: \"War\",\n      37: \"Western\",\n    };\n    let filterArray = [];\n\n    if (this.state.currText == \" \") {\n      filterArray = this.state.movies;\n    } else {\n      filterArray = this.state.movies.filter((movieObj) => {\n        let title = movieObj.original_title.toLowerCase();\n        return title.includes(this.state.currText.toLowerCase());\n      });\n    }\n\n    // if (this.state.currgen == \"All Genres\") {\n    //   filterArray = this.state.movies;\n    // } else {\n    if (this.state.currgen != \"All Genres\") {\n      filterArray = this.state.movies.filter(\n        (movieObj) => genreids[movieObj.genre_ids[0]] == this.state.currgen\n      );\n    }\n\n    let pages = Math.ceil(filterArray.length / this.state.limit);\n    let pagesArr = [];\n    for (let i = 1; i <= pages; i++) {\n      pagesArr.push(i);\n    }\n    let si = (this.state.currPage - 1) * this.state.limit; //si--> starting index\n    let li = si + this.state.limit; //li-->last index\n    filterArray = filterArray.slice(si, li);\n\n    return (\n      <div>\n        <>\n          <div className=\"main\">\n            <div className=\"row\">\n              <div className=\"col-lg-3 col-sm-12\">\n                <ul class=\"list-group nomination-genres\">\n                  {this.state.genres.map((genre) =>\n                    this.state.currgen == genre ? (\n                      <li className=\"list-group-item nomination_genre1\">\n                        {genre}\n                      </li>\n                    ) : (\n                      <li\n                        className=\"list-group-item nomination_genre2\"\n                        onClick={() => this.handleGenreChange(genre)}\n                      >\n                        {genre}\n                      </li>\n                    )\n                  )}\n                </ul>\n              </div>\n              <div className=\"col-lg-9 nomination-table col-sm-12\">\n                <div className=\"row\">\n                  <input\n                    type=\"text\"\n                    className=\"input-group-text col\"\n                    placeholder=\"Search\"\n                    value={this.state.currText}\n                    onChange={(e) =>\n                      this.setState({ currText: e.target.value })\n                    }\n                  />\n                  <input\n                    type=\"number\"\n                    className=\"input-group-text col\"\n                    placeholder=\"Rows Count\"\n                    value={this.state.limit}\n                    onChange={(e) => this.setState({ limit: e.target.value })}\n                  />\n                </div>\n                <div className=\"row\">\n                  <table class=\"table table-hover\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">Title</th>\n                        <th scope=\"col\">Genre</th>\n                        <th scope=\"col\">\n                          <i\n                            className=\"fa-solid fa-sort-up fa-lg\"\n                            onClick={this.sortPopularityUp}\n                          ></i>\n                          Popularity\n                          <i\n                            className=\"fa-solid fa-sort-down fa-lg\"\n                            onClick={this.sortPopularityDown}\n                          ></i>\n                        </th>\n                        <th scope=\"col\">\n                          <i\n                            className=\"fa-solid fa-sort-up fa-lg\"\n                            onClick={this.sortRatingUp}\n                          ></i>\n                          Ratings\n                          <i\n                            className=\"fa-solid fa-sort-down fa-lg\"\n                            onClick={this.sortRatingDown}\n                          ></i>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {filterArray.map((movieObj) => (\n                        <tr>\n                          <td>\n                            <img\n                              src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2${movieObj.backdrop_path}`}\n                              alt={movieObj.title}\n                              className=\"nomination-img\"\n                            />\n                            {movieObj.original_title}\n                          </td>\n                          <td>{genreids[movieObj.genre_ids[0]]}</td>\n                          <td>{movieObj.popularity}</td>\n                          <td>{movieObj.vote_average}</td>\n                          <button\n                            type=\"button\"\n                            class=\"btn btn-light nomination-button\"\n                            onClick={() => this.handleDelete(movieObj.id)}\n                          >\n                            <td>Delete</td>\n                          </button>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n\n                <div>\n                  <nav aria-label=\"Page navigation example\">\n                    <ul class=\"pagination\">\n                      {pagesArr.map((page) => (\n                        <li class=\"page-item\">\n                          <a\n                            class=\"page-link\"\n                            onClick={() => this.handlePagesChange(page)}\n                          >\n                            {page}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n                  </nav>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      </div>\n    );\n  }\n}\n",{"ruleId":"65","severity":1,"message":"66","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":14},{"ruleId":"65","severity":1,"message":"69","line":10,"column":3,"nodeType":"67","messageId":"68","endLine":10,"endColumn":16},{"ruleId":"65","severity":1,"message":"70","line":32,"column":9,"nodeType":"67","messageId":"68","endLine":32,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":55,"column":29,"nodeType":"73","messageId":"74","endLine":55,"endColumn":31},{"ruleId":"71","severity":1,"message":"72","line":66,"column":15,"nodeType":"73","messageId":"74","endLine":66,"endColumn":17},{"ruleId":"71","severity":1,"message":"72","line":79,"column":44,"nodeType":"73","messageId":"74","endLine":79,"endColumn":46},{"ruleId":"71","severity":1,"message":"75","line":102,"column":35,"nodeType":"73","messageId":"74","endLine":102,"endColumn":37},{"ruleId":"71","severity":1,"message":"75","line":130,"column":39,"nodeType":"73","messageId":"74","endLine":130,"endColumn":41},{"ruleId":"76","severity":1,"message":"77","line":131,"column":23,"nodeType":"78","endLine":135,"endColumn":24},{"ruleId":"76","severity":1,"message":"79","line":149,"column":21,"nodeType":"78","endLine":149,"endColumn":80},{"ruleId":"76","severity":1,"message":"79","line":155,"column":23,"nodeType":"78","endLine":158,"endColumn":24},{"ruleId":"76","severity":1,"message":"79","line":164,"column":21,"nodeType":"78","endLine":164,"endColumn":81},{"ruleId":"71","severity":1,"message":"72","line":108,"column":65,"nodeType":"73","messageId":"74","endLine":108,"endColumn":67},{"ruleId":"71","severity":1,"message":"75","line":139,"column":29,"nodeType":"73","messageId":"74","endLine":139,"endColumn":31},{"ruleId":"71","severity":1,"message":"72","line":151,"column":28,"nodeType":"73","messageId":"74","endLine":151,"endColumn":30},{"ruleId":"71","severity":1,"message":"75","line":153,"column":55,"nodeType":"73","messageId":"74","endLine":153,"endColumn":57},{"ruleId":"71","severity":1,"message":"75","line":174,"column":40,"nodeType":"73","messageId":"74","endLine":174,"endColumn":42},{"ruleId":"76","severity":1,"message":"79","line":270,"column":27,"nodeType":"78","endLine":273,"endColumn":28},"no-unused-vars","'Banner' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'CPage' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]